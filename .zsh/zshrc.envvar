# PATH ###################################################
export PATH=/sbin:$PATH
export PATH=/usr/sbin:$PATH
export PATH=/usr/local/sbin:$PATH
export PATH=$HOME/local/sbin:$PATH
export PATH=$HOME/local/bin:$PATH
export PATH=$HOME/.local/bin:$PATH
export PATH=/snap/bin:$PATH

# brew coreutils
if [ -e /usr/local/opt/coreutils/libexec/gnubin ]; then
    export PATH=/usr/local/opt/coreutils/libexec/gnubin:${PATH}
    export MANPATH=/usr/local/opt/coreutils/libexec/gnuman:${MANPATH}
fi

export PATH=/home/linuxbrew/.linuxbrew/bin:${PATH}

# asdf
#  https://asdf-vm.com/
# git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.9.0
if [ -e ~/.asdf/asdf.sh ]; then
    . ~/.asdf/asdf.sh
fi

### Python
# asdf plugin add python
# https://github.com/pyenv/pyenv/issues/1479#issuecomment-610683526
# PATH="$(echo $PATH | tr : '\n' | grep -v linuxbrew | paste -s -d:)" asdf install python 3.9.10
# asdf global python 3.9.10
# asdf reshim python
## Do re-login

### Poetry
# asdf plugin add poetry
# asdf install poetry latest
# asdf global poetry latest
# poetry config virtualenvs.in-project true

### Pip with binaries
### https://github.com/danhper/asdf-python#pip-installed-modules-and-binaries
# pip install MODULE_NAME
# asdf reshim python

### npmjs
# asdf plugin add nodejs
# asdf install nodejs 16.13.2
# asdf global nodejs 16.13.2
# asdf reshim nodejs


# Google Cloud SDK
if [ -f "$HOME/local/opt/google-cloud-sdk/path.zsh.inc" ]; then
    source "$HOME/local/opt/google-cloud-sdk/path.zsh.inc"
fi
if [ -f "$HOME/local/opt/google-cloud-sdk/completion.zsh.inc" ]; then
    source "$HOME/local/opt/google-cloud-sdk/completion.zsh.inc"
fi

# SHELL
export SHELL=$(which zsh)

#Perl (with cpanminus installed at $HOME/local/opt/perl)
export PATH=$HOME/local/opt/perl/bin:$PATH
export PERL_CPANM_OPT="--local-lib=$HOME/local/opt/perl"
export PERL_MM_OPT="$HOME/local/opt/perl"
export PERL_MB_OPT="$HOME/local/opt/perl"
export PERL5LIB=$HOME/local/opt/perl/lib/perl5/:$PERL5LIB

# .NET
export DOTNET_CLI_TELEMETRY_OPTOUT=1
if [ -e "$HOME/.dotnet" ]; then
    export PATH="$HOME/.dotnet/tools:$PATH"
fi

# OTHER PATHES
export INCLUDE=~/local/include:$INCLUDE
export CPLUS_INCLUDE_PATH=~/local/include:$CPLUS_INCLUDE_PATH
export CPLUS_LIBRARY_PATH=~/local/lib:$CPLUS_LIBRARY_PATH
export LIBRARY_PATH=~/local/lib:$LIBRARY_PATH
export LD_LIBRARY_PATH=~/local/lib:$LD_LIBRARY_PATH
export LD_RUN_PATH=~/local/lib:$LD_RUN_PATH

CUDNN_ROOT=/usr/local/cuda
if [ -e "${CUDNN_ROOT}" ]; then
    export PATH=${CUDNN_ROOT}/bin:$PATH
    export LD_LIBRARY_PATH=${CUDNN_ROOT}/lib64:$LD_LIBRARY_PATH
fi

export EDITOR=vim
export DISPLAY=:0.0
#umask 66

# LANG locale
# if you check locales you can use, type "locale -a" command.
export LANG=ja_JP.UTF-8
# export LANG=en.US.UTF-8
export LC_TIME=C

# OS X, El Capitan
# from /etc/zprofile
case $OSTYPE in
    darwin*)
        # system-wide environment settings for zsh(1)
        if [ -x /usr/libexec/path_helper ]; then
            eval "$(/usr/libexec/path_helper -s)"
        fi
        ;;
esac

if [ -e "$HOME/local/opt/tmsu/bin" ]; then
    export PATH="$HOME/local/opt/tmsu/bin:$PATH"
fi

# WSL2
# https://qiita.com/Engr_Coal33/items/6aabb6932b53bd43b843
if [[ -e /proc/sys/fs/binfmt_misc/WSLInterop ]]; then
    export DISPLAY=$(grep nameserver /etc/resolv.conf | awk '{print $2}'):0.0
fi
