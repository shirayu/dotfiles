#!/usr/bin/env bash

FILE_FULLPATH=${1:-"$HOME/secret/money/gnucash/yuta.sqlite3.gnucash"}

########## Check ##########

FILE_BASENAME=$(basename "${FILE_FULLPATH}")
FILE_DIRNAME=$(dirname "${FILE_FULLPATH}")
LOCK_DIR="/tmp/mygnucash"
LOCK_FILE="${LOCK_DIR}/${FILE_BASENAME}.lock"

type sqlite3 >/dev/null || (
    zenity --width 600 --error --text "No sqlite3"
    exit 1
)

if [ -e "${LOCK_FILE}" ]; then
    zenity --width 600 --error --text "Already running for ${FILE_FULLPATH}"
    exit 1
fi

if [[ ! -f "${FILE_DIRNAME}/${FILE_BASENAME}" ]]; then
    zenity --width 600 --error --text "No such file:\n${FILE_DIRNAME}/${FILE_BASENAME}"
    exit 1
fi
if [[ ! -f ~/.apikey.sh ]]; then
    zenity --width 600 --error --text "No such file:\n~/.apikey.sh"
    exit 2
fi

# shellcheck disable=SC1090
source ~/.apikey.sh
if [[ ${ALPHAVANTAGE_API_KEY} == "" ]]; then
    zenity --width 600 --error --text "No ALPHAVANTAGE_API_KEY"
    exit 3
fi

########## Main ##########

atexit() {
    [[ -n ${TMP_DIR-} ]] && rm -rf "${TMP_DIR}"
}
trap atexit EXIT
trap 'rc=$?; trap - EXIT; atexit; exit $?' INT PIPE TERM

mkdir -p "${LOCK_DIR}"
date '+%Y-%m-%d-%H:%M:%S' >"${LOCK_FILE}"

TMP_DIR=$(mktemp -d)

echo "${FILE_DIRNAME} -> ${TMP_DIR}"
# shellcheck disable=SC2038
find "${FILE_DIRNAME}" -name '*log' -mtime +2 -type f | xargs rm
rsync -av "${FILE_DIRNAME}/" "${TMP_DIR}"

# https://gitlab.gnome.org/GNOME/gnome-control-center/-/issues/2498#note_1779435
WEBKIT_DISABLE_COMPOSITING_MODE=1 \
    WEBKIT_DISABLE_SANDBOX_THIS_IS_DANGEROUS=1 \
    WEBKIT_FORCE_SANDBOX=0 \
    FQ_LOAD_QUOTELET='-defaults YahooJapan' \
    gnucash "${TMP_DIR}/${FILE_BASENAME}"

rm "${LOCK_FILE}"
if [[ ${NOSAVE} == "1" ]]; then
    exit
fi

sqlite3 "${TMP_DIR}/${FILE_BASENAME}" .dump >"${TMP_DIR}/${FILE_BASENAME}.dump"

while [ ! -d "${FILE_DIRNAME}" ]; do
    zenity --width 600 --error --text "No such directory:\n${FILE_DIRNAME}"
    exit 7
done

diff "${FILE_DIRNAME}/${FILE_BASENAME}.dump" "${TMP_DIR}/${FILE_BASENAME}.dump" && exit 0

echo "Found diff. Do rsync."
rsync --delete -av "${TMP_DIR}/" "${FILE_DIRNAME}"
