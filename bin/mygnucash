#!/usr/bin/env bash

# Parse command line arguments
DUMP_MODE=0
while [[ $# -gt 0 ]]; do
    case $1 in
        --dump)
            DUMP_MODE=1
            shift
            ;;
        *)
            FILE_FULLPATH="$1"
            shift
            ;;
    esac
done

FILE_FULLPATH=${FILE_FULLPATH:-"$HOME/secret/money/gnucash/yuta.sqlite3.gnucash"}

########## Check ##########

FILE_BASENAME=$(basename "${FILE_FULLPATH}")
FILE_DIRNAME=$(dirname "${FILE_FULLPATH}")
LOCK_DIR="/tmp"
LOCK_FILE="${LOCK_DIR}/mygnucash.${USER}__${FILE_BASENAME}.lock"

type sqlite3 >/dev/null || (
    zenity --width 600 --error --text "No sqlite3"
    exit 1
)

exec 9>"${LOCK_FILE}"

flock -n 9 || {
    zenity --width 600 --error --text "Locked:\n${LOCK_FILE}\n\nAlready running for ${FILE_FULLPATH}"
    exit 1
}

if [[ ! -f "${FILE_DIRNAME}/${FILE_BASENAME}" ]]; then
    zenity --width 600 --error --text "No such file:\n${FILE_DIRNAME}/${FILE_BASENAME}"
    exit 1
fi
if [[ ! -f ~/.apikey.sh ]]; then
    zenity --width 600 --error --text "No such file:\n~/.apikey.sh"
    exit 2
fi

# shellcheck disable=SC1090
source ~/.apikey.sh
if [[ ${ALPHAVANTAGE_API_KEY} == "" ]]; then
    zenity --width 600 --error --text "No ALPHAVANTAGE_API_KEY"
    exit 3
fi

########## Main ##########

atexit() {
    [[ -n ${TMP_DIR-} ]] && rm -rf "${TMP_DIR}"
}
trap atexit EXIT
trap 'rc=$?; trap - EXIT; atexit; exit $?' INT PIPE TERM

create_sqlite_dump() {
    local sqlite_file="$1"
    local output_file="$2"
    local tmp_dump
    
    if mountpoint -q /dev/shm; then
        tmp_dump=$(mktemp -p /dev/shm)
    else
        tmp_dump=$(mktemp)
    fi
    
    # 関数内でtrap設定
    trap "rm -f '${tmp_dump}'" EXIT INT TERM
    
    sqlite3 "${sqlite_file}" .dump >"${tmp_dump}"
    mv "${tmp_dump}" "${output_file}"
    
    # 成功時はtrap解除
    trap - EXIT INT TERM
}

mkdir -p "${LOCK_DIR}"
date '+%Y-%m-%d-%H:%M:%S' >"${LOCK_FILE}"

TMP_DIR=$(mktemp -d)

echo "${FILE_DIRNAME} -> ${TMP_DIR}"
# shellcheck disable=SC2038
find "${FILE_DIRNAME}" -name '*log' -mtime +2 -type f | xargs rm
rsync -av "${FILE_DIRNAME}/" "${TMP_DIR}"

if [[ ${DUMP_MODE} == "1" ]]; then
    echo "Dump mode: Updating ${FILE_FULLPATH}.dump"
    create_sqlite_dump "${FILE_FULLPATH}" "${FILE_FULLPATH}.dump"
    rm "${LOCK_FILE}"
    exit 0
fi

# https://bugs.mageia.org/show_bug.cgi?id=33964#c2
__EGL_VENDOR_LIBRARY_FILENAMES=/usr/share/glvnd/egl_vendor.d/10_nvidia.json \
    FQ_LOAD_QUOTELET='-defaults YahooJapan' \
    gnucash "${TMP_DIR}/${FILE_BASENAME}"

if [[ ${NOSAVE} == "1" ]]; then
    exit
fi

create_sqlite_dump "${TMP_DIR}/${FILE_BASENAME}" "${TMP_DIR}/${FILE_BASENAME}.dump"

while [ ! -d "${FILE_DIRNAME}" ]; do
    zenity --width 600 --error --text "No such directory:\n${FILE_DIRNAME}"
    exit 7
done

diff "${FILE_DIRNAME}/${FILE_BASENAME}.dump" "${TMP_DIR}/${FILE_BASENAME}.dump" && exit 0

echo "Found diff. Do rsync."
rsync --delete -av "${TMP_DIR}/" "${FILE_DIRNAME}"
rm "${LOCK_FILE}"
